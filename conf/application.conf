play {
  i18n.langs = ["en"]
  http {
    secret.key = "mdjrirgbyfhvcjd2k3o4grfidswy3784rifk"

  }
  modules {
    enabled += play.filters.cors.CORSModule
    enabled += play.filters.headers.SecurityHeadersModule
    enabled += play.filters.gzip.GzipFilterModule
  }
  filters {
    enabled += play.filters.headers.SecurityHeadersFilter
    enabled += play.filters.gzip.GzipFilter
    enabled += play.filters.cors.CORSFilter
    enabled += play.filters.hosts.AllowedHostsFilter
    disabled += play.filters.csrf.CSRFFilter

    # Security headers filter configuration
    headers {
      # The X-Frame-Options header. If null, the header is not set.
      frameOptions = "DENY"
      # The X-XSS-Protection header. If null, the header is not set.
      xssProtection = "1; mode=block"
      # The X-Content-Type-Options header. If null, the header is not set.
      contentTypeOptions = "nosniff"
      # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
      permittedCrossDomainPolicies = "master-only"
      # The Content-Security-Policy header. If null, the header is not set.
      contentSecurityPolicy = null
      # The Referrer-Policy header. If null, the header is not set.
      referrerPolicy = "origin-when-cross-origin, strict-origin-when-cross-origin"
      # If true, allow an action to use .withHeaders to replace one or more of the above headers
      allowActionSpecificHeaders = true
    }
    # GZip filter configuration
    gzip {
      # The buffer size to use for gzipped bytes
      bufferSize = 8k
      # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
      # to chunked encoding.
      chunkedThreshold = 100k
      contentType {
        # If non empty, then a response will only be compressed if its content type is in this list.
        whiteList = ["text/*", "application/javascript", "application/json"]
        # The black list is only used if the white list is empty.
        # Compress all responses except the ones whose content type is in this list.
        blackList = []
      }
    }
    hosts {
      # A list of valid hosts (e.g. "example.com") or suffixes of valid hosts (e.g. ".example.com")
      # Note that ".example.com" will match example.com and any subdomain of example.com, with or without a trailing dot.
      # "." matches all domains, and "" matches an empty or nonexistent host.
      allowed = ["localhost"]
    }
  }
}
